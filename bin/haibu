#!/usr/bin/env node

var path = require('path'),
    util = require('util'),
    haibu = require('../lib/haibu'),
    flatiron = require('flatiron'),
    app = flatiron.app;

app.use(flatiron.plugins.cli, {
  usage: haibu.common.welcome.concat([
    'Commands:',
    '  start                    Start the server.',
    '  help                     You\'re looking at it!'
  ]),

  argv: {
    address: {
      alias: 'a',
      description: 'IP address for the server to bind to.',
      string: true,
      default: 'dynamic'
    },
    port: {
      alias: 'p',
      description: 'Port for the server to listen on.',
      check: function(argv) {
        if (isNaN(parseInt(argv.port))) return false;
      },
      default: 9002
    },
    env: {
      alias: 'e',
      description: 'Environment to run the server in.',
      string: true,
      default: 'development'
    },
    logger: {
      description: 'Use the Haibu Logger plugin.',
      boolean: true
    },
    'advanced-replies': {
      description: 'Send extra info with replies.',
      boolean: true
    },
    silent: {
      alias: 's',
      description: 'Suppress the log messages from the output.',
      boolean: true
    },
    useraccounts: {
      alias: 'u',
      description: 'Use the Haibu User Accounts plugin.',
      boolean: true
    },
    coffee: {
      alias: 'c',
      description: 'Use the Haibu CoffeeScript plugin.',
      boolean: true
    },
    help: {
      alias: 'h',
      description: 'You\'re looking at it!',
      boolean: true
    }
  }
});

var start = app.commands.start = function(address, port, env) {
  address = address || app.argv.address         || haibu.common.ipAddress();
  port    = port    || parseInt(app.argv.port)  || 9002;
  env     = env     || app.argv.env             || 'development';

  if (app.argv.useraccounts) {
    haibu.use(haibu.useraccounts, {});
  }

  if (app.argv.coffee) {
    haibu.use(haibu.coffee, {});
  }

  if (app.argv['advanced-replies']) {
    haibu.use(haibu['advanced-replies'], {});
  }

  haibu.config.file({ file: path.join(__dirname, '..', 'config', 'config.json') });

  haibu.drone.start({
    env: env,
    port: port,
    host: address
  }, function () {
    haibu.utils.showWelcome('api-server', address, port);
  });
};


// If no command was given, immediately start haibu.
if (app.argv._.length == 0 && !app.argv.help) {
  start();
}
else {
  app.start();
}
