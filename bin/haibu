#!/usr/bin/env node

var clip = require('clip');
var winston = require('winston');
var colors = require('colors');
var haibu = require('../');
var app = new clip();
var fs = require('fs');

app.config('.haibuconf', {
  flags: ['c', 'conf'],
  defaults: {
    port: 9002,
    host: '127.0.0.1'
  }
});

app.flag(['s', 'silent'], function (cmd, tty, next) {
  tty.remove(tty.transports.Console);
})

app.use(function (cmd, tty, next) {
  tty.info('Using config file '+cmd.config.store.file.magenta);

  try {
    var app = JSON.parse(fs.readFileSync('package.json'));
    var deploymentscript = cmd.config.get('f') || cmd.config.get('file') || 'deploy.json';
    try {
      var deployment = JSON.parse(fs.readFileSync(deploymentscript));
      tty.info('Deployment script is ' + fs.realpathSync(deploymentscript).magenta);
      ['repository', 'name', 'domain', 'subdomain', 'env', 'user'].forEach(function (item) {
        if (deployment.hasOwnProperty(item)) {
          app[item] = deployment[item];
        }
      })
      if (!app.user) {
        app.user = cmd.config.get('user');
      }
    }
    catch (e) {
      tty.warn('No deployment script was detected');
    }
    cmd.app = app;
  } 
  catch (e) {
    if (e.name === 'SyntaxError') {
      tty.error('Unable to read deployment configuration.');
      process.exit(1);
      return;
    }

    cmd.app = {};
  }

  var clientsettings = {
    host: cmd.config.get('a') || cmd.config.get('address'),
    port: cmd.config.get('p') || cmd.config.get('port')
  };

  tty.info('haibu-server located at '+(clientsettings.host+':'+clientsettings.port).magenta);
  cmd.client = new haibu.drone.Client(clientsettings);

  next();
});
require('../lib/haibu/cli/config')(app);
require('../lib/haibu/cli/apps')(app);

app.usage(function usage(cmd, tty) {
  tty.info('');
  tty.info('haibu'.bold.underline);
  tty.info('  CLI interface to manage a Haibu server.');
  tty.info('  Please refer to documentation of commands using `-h` or `--help`.');
  tty.info('');
  tty.info('commands'.bold);
  tty.info('  haibu apps'.green);
  tty.info('  haibu config'.green);
  tty.info('');
  tty.info('flags'.bold);
  tty.info('  -s --silent                Do not log to console');
  tty.info('');
});

app.run();
